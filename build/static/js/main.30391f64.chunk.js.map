{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo.js/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Rank/Rank.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js","Components/Logo.js/logo.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","logo","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","box","id","alt","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","for","name","class","value","Rank","Register","particlesOptions","particles","number","density","enable","value_area","app","Clarifai","App","apiKey","route","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.30391f64.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) =>{\r\n   \r\n        if(isSignedIn) {\r\n            return(\r\n            <nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={ () => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n    );\r\n        }\r\n        else{\r\n            return(\r\n            <nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={ () => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n            <p onClick={ () => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n                    );\r\n        }\r\n        \r\n    }\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css'\r\nimport logo from './logo.png'\r\nconst Logo = () =>{\r\n    return(\r\n\r\n       <div className='ma4 mt0'>\r\n             \r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 120, width: 150 }} >\r\n         <div className=\"Tilt-inner pa2\"> <img style={{paddingTop:'5px'}} src={logo}/>  </div>\r\n        </Tilt>\r\n\r\n\r\n       </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport  './ImageLinkForm.css'\r\nconst ImageLinkForm = ({onInputChange , onButtonSubmit}) =>{\r\n    return(\r\n<div>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures. Git it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n          <div className=' form center pa4 br3 shadow-5'>\r\n            <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange} />\r\n           <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n           onClick={onButtonSubmit}\r\n           >Detect </button>\r\n       </div>\r\n       </div>\r\n       </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({imageUrl , box}) =>{\r\n    return(\r\n            <div className='center ma'>\r\n                    <div className='absolute mt2'>\r\n                    <img id='inputimage' alt=\"\" src={imageUrl} width='500px' height='auto'/>\r\n                    <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n            \r\n        \r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './SignIn.css'\r\n\r\nconst SignIn = ({onRouteChange}) =>{\r\n    return(\r\n        <article className=\"br3 ba  b--black-10 mv3 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n        <form className=\"measure\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n         <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n    <div className=\"mt3\">\r\n          <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n          <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div class=\"\">\r\n      <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n       type=\"submit\" \r\n       value=\"Sign in\"\r\n       onClick={() => onRouteChange('home')}\r\n       \r\n       />\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n    </div>\r\n  </form>\r\n</main>\r\n        \r\n      </article>\r\n\r\n\r\n        \r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Rank = () =>{\r\n\r\n\r\n    return(\r\n        <div>\r\n                <div className='white f3'>\r\n                    {'Andrei, your current rank is...'}\r\n\r\n                </div>\r\n\r\n        <div className='white f1'>\r\n            \r\n            {'#5'}\r\n\r\n       </div>\r\n       </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst Register= ({onRouteChange}) =>{\r\n    return(\r\n        <article className=\"br3 ba  b--black-10 mv3 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n    <form className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n     <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n     <div className=\"mt3\">\r\n      <label className=\"db fw6 lh-copy f6\" for=\"name \">Name</label>\r\n      <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n  </div>\r\n<div className=\"mt3\">\r\n      <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n      <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n  </div>\r\n  <div className=\"mv3\">\r\n    <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n  </div>\r\n</fieldset>\r\n    <div class=\"\">\r\n      <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n       type=\"submit\" \r\n       value=\"Register\"\r\n       onClick={() => onRouteChange('home')}\r\n       \r\n       />\r\n    </div>\r\n  </form>\r\n</main>\r\n        \r\n      </article>\r\n\r\n\r\n        \r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Register;","import React,{Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport './App.css';\nimport Logo from './Components/Logo.js/Logo'\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition'\nimport SignIn from './Components/SignIn/SignIn'\nimport Rank from './Components/Rank/Rank'\nimport Register from './Components/Register/Register'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n\n\nconst particlesOptions ={\n\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\nconst app = new Clarifai.App({\n  apiKey: \"a7695e1e46f24463a6a97d867bfd4563\",\n });\n  \n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state={\n      input: '',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n      \n    }\n  }\n\n  onRouteChange = (route) =>{\n    if(route === 'signout'){\n\n      this.setState({isSignedIn:false})\n    } else if (route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route: route});\n\n\n  }\n\n  calculateFaceLocation=(data) =>{\n      const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image=document.getElementById('inputimage');\n      const width=Number(image.width);\n      const height=Number(image.height);   \n      //with this we cand take the image dimension \n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n      \n\n    }\n\n  }\n\n  displayFaceBox=(box) =>{\n    /*console.log(box) */\n    this.setState({box:box});\n  }\n  onInputChange =(event) =>{\n    this.setState({input: event.target.value});\n\n\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input}) //daca puneam doar input imi da eroare input is not defined\n    app.models\n   .predict(\n   Clarifai.FACE_DETECT_MODEL,\n   this.state.input)\n   \n   .then(response =>  this.displayFaceBox(this.calculateFaceLocation(response)))\n   .catch(err => console.log(err));\n   \n  }   \n \n  render(){\n  return (\n    <div className=\"App\">\n            <Particles className='particles' \n            params={particlesOptions} />\n                \n       \n    <Navigation  isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n    { this.state.route === 'home'\n      ? <div>\n       <Logo/>\n      <Rank />\n      <ImageLinkForm \n      onInputChange={this.onInputChange}\n      onButtonSubmit={this.onButtonSubmit} />\n      <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n      </div>\n\n      : ( this.state.route === 'signin'\n        ?<SignIn onRouteChange={this.onRouteChange} />\n        :<Register onRouteChange={this.onRouteChange}/>\n      )\n    }\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9fb689a3.png\";"],"sourceRoot":""}